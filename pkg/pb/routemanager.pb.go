// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v3.21.12
// source: routemanager.proto

package routemanager

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum for business logic errors.
type StatusCode int32

const (
	StatusCode_INVALID_DESTINATION  StatusCode = 0
	StatusCode_ROUTE_NOT_FOUND      StatusCode = 1
	StatusCode_ROUTE_ALREADY_EXISTS StatusCode = 2 // Extend with more business errors as needed.
)

// Enum value maps for StatusCode.
var (
	StatusCode_name = map[int32]string{
		0: "INVALID_DESTINATION",
		1: "ROUTE_NOT_FOUND",
		2: "ROUTE_ALREADY_EXISTS",
	}
	StatusCode_value = map[string]int32{
		"INVALID_DESTINATION":  0,
		"ROUTE_NOT_FOUND":      1,
		"ROUTE_ALREADY_EXISTS": 2,
	}
)

func (x StatusCode) Enum() *StatusCode {
	p := new(StatusCode)
	*p = x
	return p
}

func (x StatusCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusCode) Descriptor() protoreflect.EnumDescriptor {
	return file_routemanager_proto_enumTypes[0].Descriptor()
}

func (StatusCode) Type() protoreflect.EnumType {
	return &file_routemanager_proto_enumTypes[0]
}

func (x StatusCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusCode.Descriptor instead.
func (StatusCode) EnumDescriptor() ([]byte, []int) {
	return file_routemanager_proto_rawDescGZIP(), []int{0}
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        StatusCode `protobuf:"varint,1,opt,name=code,proto3,enum=routemanager.StatusCode" json:"code,omitempty"`
	Description string     `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routemanager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_routemanager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_routemanager_proto_rawDescGZIP(), []int{0}
}

func (x *Error) GetCode() StatusCode {
	if x != nil {
		return x.Code
	}
	return StatusCode_INVALID_DESTINATION
}

func (x *Error) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Request and response messages.
type AddRouteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Destination string `protobuf:"bytes,1,opt,name=destination,proto3" json:"destination,omitempty"`
}

func (x *AddRouteRequest) Reset() {
	*x = AddRouteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routemanager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRouteRequest) ProtoMessage() {}

func (x *AddRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_routemanager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRouteRequest.ProtoReflect.Descriptor instead.
func (*AddRouteRequest) Descriptor() ([]byte, []int) {
	return file_routemanager_proto_rawDescGZIP(), []int{1}
}

func (x *AddRouteRequest) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

type AddRouteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*AddRouteResponse_Payload
	//	*AddRouteResponse_Error
	Response isAddRouteResponse_Response `protobuf_oneof:"response"`
}

func (x *AddRouteResponse) Reset() {
	*x = AddRouteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routemanager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRouteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRouteResponse) ProtoMessage() {}

func (x *AddRouteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_routemanager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRouteResponse.ProtoReflect.Descriptor instead.
func (*AddRouteResponse) Descriptor() ([]byte, []int) {
	return file_routemanager_proto_rawDescGZIP(), []int{2}
}

func (m *AddRouteResponse) GetResponse() isAddRouteResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *AddRouteResponse) GetPayload() *AddRoutePayload {
	if x, ok := x.GetResponse().(*AddRouteResponse_Payload); ok {
		return x.Payload
	}
	return nil
}

func (x *AddRouteResponse) GetError() *Error {
	if x, ok := x.GetResponse().(*AddRouteResponse_Error); ok {
		return x.Error
	}
	return nil
}

type isAddRouteResponse_Response interface {
	isAddRouteResponse_Response()
}

type AddRouteResponse_Payload struct {
	Payload *AddRoutePayload `protobuf:"bytes,1,opt,name=payload,proto3,oneof"`
}

type AddRouteResponse_Error struct {
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*AddRouteResponse_Payload) isAddRouteResponse_Response() {}

func (*AddRouteResponse_Error) isAddRouteResponse_Response() {}

type AddRoutePayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddRoutePayload) Reset() {
	*x = AddRoutePayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routemanager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRoutePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRoutePayload) ProtoMessage() {}

func (x *AddRoutePayload) ProtoReflect() protoreflect.Message {
	mi := &file_routemanager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRoutePayload.ProtoReflect.Descriptor instead.
func (*AddRoutePayload) Descriptor() ([]byte, []int) {
	return file_routemanager_proto_rawDescGZIP(), []int{3}
}

func (x *AddRoutePayload) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AddRoutePayload) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RemoveRouteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Destination string `protobuf:"bytes,1,opt,name=destination,proto3" json:"destination,omitempty"`
}

func (x *RemoveRouteRequest) Reset() {
	*x = RemoveRouteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routemanager_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRouteRequest) ProtoMessage() {}

func (x *RemoveRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_routemanager_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRouteRequest.ProtoReflect.Descriptor instead.
func (*RemoveRouteRequest) Descriptor() ([]byte, []int) {
	return file_routemanager_proto_rawDescGZIP(), []int{4}
}

func (x *RemoveRouteRequest) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

type RemoveRouteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*RemoveRouteResponse_Payload
	//	*RemoveRouteResponse_Error
	Response isRemoveRouteResponse_Response `protobuf_oneof:"response"`
}

func (x *RemoveRouteResponse) Reset() {
	*x = RemoveRouteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routemanager_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveRouteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRouteResponse) ProtoMessage() {}

func (x *RemoveRouteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_routemanager_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRouteResponse.ProtoReflect.Descriptor instead.
func (*RemoveRouteResponse) Descriptor() ([]byte, []int) {
	return file_routemanager_proto_rawDescGZIP(), []int{5}
}

func (m *RemoveRouteResponse) GetResponse() isRemoveRouteResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *RemoveRouteResponse) GetPayload() *RemoveRoutePayload {
	if x, ok := x.GetResponse().(*RemoveRouteResponse_Payload); ok {
		return x.Payload
	}
	return nil
}

func (x *RemoveRouteResponse) GetError() *Error {
	if x, ok := x.GetResponse().(*RemoveRouteResponse_Error); ok {
		return x.Error
	}
	return nil
}

type isRemoveRouteResponse_Response interface {
	isRemoveRouteResponse_Response()
}

type RemoveRouteResponse_Payload struct {
	Payload *RemoveRoutePayload `protobuf:"bytes,1,opt,name=payload,proto3,oneof"`
}

type RemoveRouteResponse_Error struct {
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*RemoveRouteResponse_Payload) isRemoveRouteResponse_Response() {}

func (*RemoveRouteResponse_Error) isRemoveRouteResponse_Response() {}

type RemoveRoutePayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RemoveRoutePayload) Reset() {
	*x = RemoveRoutePayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routemanager_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveRoutePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRoutePayload) ProtoMessage() {}

func (x *RemoveRoutePayload) ProtoReflect() protoreflect.Message {
	mi := &file_routemanager_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRoutePayload.ProtoReflect.Descriptor instead.
func (*RemoveRoutePayload) Descriptor() ([]byte, []int) {
	return file_routemanager_proto_rawDescGZIP(), []int{6}
}

func (x *RemoveRoutePayload) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RemoveRoutePayload) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListRoutesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListRoutesRequest) Reset() {
	*x = ListRoutesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routemanager_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoutesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoutesRequest) ProtoMessage() {}

func (x *ListRoutesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_routemanager_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoutesRequest.ProtoReflect.Descriptor instead.
func (*ListRoutesRequest) Descriptor() ([]byte, []int) {
	return file_routemanager_proto_rawDescGZIP(), []int{7}
}

type ListRoutesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*ListRoutesResponse_Payload
	//	*ListRoutesResponse_Error
	Response isListRoutesResponse_Response `protobuf_oneof:"response"`
}

func (x *ListRoutesResponse) Reset() {
	*x = ListRoutesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routemanager_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoutesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoutesResponse) ProtoMessage() {}

func (x *ListRoutesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_routemanager_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoutesResponse.ProtoReflect.Descriptor instead.
func (*ListRoutesResponse) Descriptor() ([]byte, []int) {
	return file_routemanager_proto_rawDescGZIP(), []int{8}
}

func (m *ListRoutesResponse) GetResponse() isListRoutesResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *ListRoutesResponse) GetPayload() *ListRoutesPayload {
	if x, ok := x.GetResponse().(*ListRoutesResponse_Payload); ok {
		return x.Payload
	}
	return nil
}

func (x *ListRoutesResponse) GetError() *Error {
	if x, ok := x.GetResponse().(*ListRoutesResponse_Error); ok {
		return x.Error
	}
	return nil
}

type isListRoutesResponse_Response interface {
	isListRoutesResponse_Response()
}

type ListRoutesResponse_Payload struct {
	Payload *ListRoutesPayload `protobuf:"bytes,1,opt,name=payload,proto3,oneof"`
}

type ListRoutesResponse_Error struct {
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*ListRoutesResponse_Payload) isListRoutesResponse_Response() {}

func (*ListRoutesResponse_Error) isListRoutesResponse_Response() {}

type ListRoutesPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Routes []string `protobuf:"bytes,1,rep,name=routes,proto3" json:"routes,omitempty"`
}

func (x *ListRoutesPayload) Reset() {
	*x = ListRoutesPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routemanager_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoutesPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoutesPayload) ProtoMessage() {}

func (x *ListRoutesPayload) ProtoReflect() protoreflect.Message {
	mi := &file_routemanager_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoutesPayload.ProtoReflect.Descriptor instead.
func (*ListRoutesPayload) Descriptor() ([]byte, []int) {
	return file_routemanager_proto_rawDescGZIP(), []int{9}
}

func (x *ListRoutesPayload) GetRoutes() []string {
	if x != nil {
		return x.Routes
	}
	return nil
}

var File_routemanager_proto protoreflect.FileDescriptor

var file_routemanager_proto_rawDesc = []byte{
	0x0a, 0x12, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x22, 0x57, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x33, 0x0a, 0x0f, 0x41,
	0x64, 0x64, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x86, 0x01, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x2b, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x0a, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x45, 0x0a, 0x0f, 0x41, 0x64, 0x64,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x36, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8c, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3c, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2b,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x48, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x13, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x8a, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x48,
	0x00, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2b, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2b, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x73, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73,
	0x2a, 0x54, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17,
	0x0a, 0x13, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x44, 0x45, 0x53, 0x54, 0x49, 0x4e,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x4f, 0x55, 0x54, 0x45,
	0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14,
	0x52, 0x4f, 0x55, 0x54, 0x45, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x45, 0x58,
	0x49, 0x53, 0x54, 0x53, 0x10, 0x02, 0x32, 0x84, 0x02, 0x0a, 0x0c, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x4b, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x12, 0x20, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0a, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3f, 0x5a,
	0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x69, 0x6c, 0x61,
	0x6c, 0x63, 0x61, 0x6c, 0x69, 0x73, 0x6b, 0x61, 0x6e, 0x2f, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x2d,
	0x74, 0x68, 0x65, 0x2d, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70,
	0x62, 0x3b, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_routemanager_proto_rawDescOnce sync.Once
	file_routemanager_proto_rawDescData = file_routemanager_proto_rawDesc
)

func file_routemanager_proto_rawDescGZIP() []byte {
	file_routemanager_proto_rawDescOnce.Do(func() {
		file_routemanager_proto_rawDescData = protoimpl.X.CompressGZIP(file_routemanager_proto_rawDescData)
	})
	return file_routemanager_proto_rawDescData
}

var file_routemanager_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_routemanager_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_routemanager_proto_goTypes = []interface{}{
	(StatusCode)(0),             // 0: routemanager.StatusCode
	(*Error)(nil),               // 1: routemanager.Error
	(*AddRouteRequest)(nil),     // 2: routemanager.AddRouteRequest
	(*AddRouteResponse)(nil),    // 3: routemanager.AddRouteResponse
	(*AddRoutePayload)(nil),     // 4: routemanager.AddRoutePayload
	(*RemoveRouteRequest)(nil),  // 5: routemanager.RemoveRouteRequest
	(*RemoveRouteResponse)(nil), // 6: routemanager.RemoveRouteResponse
	(*RemoveRoutePayload)(nil),  // 7: routemanager.RemoveRoutePayload
	(*ListRoutesRequest)(nil),   // 8: routemanager.ListRoutesRequest
	(*ListRoutesResponse)(nil),  // 9: routemanager.ListRoutesResponse
	(*ListRoutesPayload)(nil),   // 10: routemanager.ListRoutesPayload
}
var file_routemanager_proto_depIdxs = []int32{
	0,  // 0: routemanager.Error.code:type_name -> routemanager.StatusCode
	4,  // 1: routemanager.AddRouteResponse.payload:type_name -> routemanager.AddRoutePayload
	1,  // 2: routemanager.AddRouteResponse.error:type_name -> routemanager.Error
	7,  // 3: routemanager.RemoveRouteResponse.payload:type_name -> routemanager.RemoveRoutePayload
	1,  // 4: routemanager.RemoveRouteResponse.error:type_name -> routemanager.Error
	10, // 5: routemanager.ListRoutesResponse.payload:type_name -> routemanager.ListRoutesPayload
	1,  // 6: routemanager.ListRoutesResponse.error:type_name -> routemanager.Error
	2,  // 7: routemanager.RouteManager.AddRoute:input_type -> routemanager.AddRouteRequest
	5,  // 8: routemanager.RouteManager.RemoveRoute:input_type -> routemanager.RemoveRouteRequest
	8,  // 9: routemanager.RouteManager.ListRoutes:input_type -> routemanager.ListRoutesRequest
	3,  // 10: routemanager.RouteManager.AddRoute:output_type -> routemanager.AddRouteResponse
	6,  // 11: routemanager.RouteManager.RemoveRoute:output_type -> routemanager.RemoveRouteResponse
	9,  // 12: routemanager.RouteManager.ListRoutes:output_type -> routemanager.ListRoutesResponse
	10, // [10:13] is the sub-list for method output_type
	7,  // [7:10] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_routemanager_proto_init() }
func file_routemanager_proto_init() {
	if File_routemanager_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_routemanager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routemanager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRouteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routemanager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRouteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routemanager_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRoutePayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routemanager_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveRouteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routemanager_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveRouteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routemanager_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveRoutePayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routemanager_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoutesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routemanager_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoutesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routemanager_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoutesPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_routemanager_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*AddRouteResponse_Payload)(nil),
		(*AddRouteResponse_Error)(nil),
	}
	file_routemanager_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*RemoveRouteResponse_Payload)(nil),
		(*RemoveRouteResponse_Error)(nil),
	}
	file_routemanager_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*ListRoutesResponse_Payload)(nil),
		(*ListRoutesResponse_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_routemanager_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_routemanager_proto_goTypes,
		DependencyIndexes: file_routemanager_proto_depIdxs,
		EnumInfos:         file_routemanager_proto_enumTypes,
		MessageInfos:      file_routemanager_proto_msgTypes,
	}.Build()
	File_routemanager_proto = out.File
	file_routemanager_proto_rawDesc = nil
	file_routemanager_proto_goTypes = nil
	file_routemanager_proto_depIdxs = nil
}
